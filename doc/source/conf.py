# -*- coding: utf-8 -*-
#
# OEREB documentation build configuration file, created by
# sphinx-quickstart on Tue May  9 09:50:33 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
# sys.path.insert(0, os.path.abspath('.'))
import re
import subprocess
import sphinx_rtd_theme
from pyramid_oereb.core.config import Config
Config._config = {'srid': -1, 'app_schema': {'name': 'pyramid_oereb_main'}}


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.

extensions = [
    'sphinx.ext.coverage',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
    'sphinx.ext.autodoc',
    'sphinx.ext.napoleon',
]

with open('core/readers.rst', 'w') as readers:
    readers.write(subprocess.check_output([
        '../../.venv/bin/mako-render' if os.path.exists('../../.venv/bin/mako-render') else 'mako-render',
        'core/readers.rst.mako']).decode('utf-8'))

with open('core/records.rst', 'w') as records:
    records.write(subprocess.check_output([
        '../../.venv/bin/mako-render' if os.path.exists('../../.venv/bin/mako-render') else 'mako-render',
        'core/records.rst.mako']).decode('utf-8'))

with open('core/sources.rst', 'w') as sources:
    sources.write(subprocess.check_output([
        '../../.venv/bin/mako-render' if os.path.exists('../../.venv/bin/mako-render') else 'mako-render',
        'core/sources.rst.mako']).decode('utf-8'))

with open('contrib/stats.rst', 'w') as sources:
    sources.write(subprocess.check_output([
        '../../.venv/bin/mako-render' if os.path.exists('../../.venv/bin/mako-render') else 'mako-render',
        'contrib/stats.rst.mako']).decode('utf-8'))
target_paths = [
    'contrib/data_sources/standard/index.rst',
    'contrib/data_sources/standard/models.rst',
    'contrib/data_sources/standard/models-main.rst',
    'contrib/data_sources/standard/models-theme.rst',
    'contrib/data_sources/standard/sources.rst',
    'contrib/data_sources/interlis_2_3/index.rst',
    'contrib/data_sources/oereblex/index.rst',
    'contrib/data_sources/swisstopo/index.rst',
    'contrib/data_sources/index.rst',
    'contrib/print_proxy/index.rst',
    'contrib/print_proxy/mapfish-print.rst',
    'contrib/print_proxy/xml2pdf.rst'
]

for target_path in target_paths:
    with open(target_path, 'w') as sources:
        sources.write(subprocess.check_output([
            '../../.venv/bin/mako-render' if os.path.exists('../../.venv/bin/mako-render') else 'mako-render',
            f'{target_path}.mako']).decode('utf-8'))

# Add any paths that contain templates here, relative to this directory.
templates_path = ['doc/_buildtemplates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'pyramid_oereb'
copyright = u'2017-2022, openoereb community'  # pylint: disable=W0622
author = u'openoereb community'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u''
# The full version, including alpha/beta/rc tags.
release = u''

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
html_show_sourcelink = False

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['doc/_buildstatic']
html_extra_path = ['files']


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'OEREBdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'OEREB.tex', u'OEREB Documentation', u'pyramid\\_oereb devs', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'oereb', u'OEREB Documentation', [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc, 'OEREB', u'OEREB Documentation', author, 'OEREB', 'One line description of project.',
        'Miscellaneous'
    ),
]


# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

# sphinxcontrib-versioning
# https://robpol86.github.io/sphinxcontrib-versioning/settings.html
scv_greatest_tag = False
scv_whitelist_branches = ('master', )
scv_whitelist_tags = (re.compile(r'^v\d+\.\d+\.\d+$'),)
